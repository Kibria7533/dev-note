# Use a specific Python version as a parent image
FROM python:3.10-slim

# Set the working directory to /application
WORKDIR /application

# Copy only the poetry files to leverage Docker cache
COPY pyproject.toml poetry.lock /application/

# Install poetry and dependencies
RUN pip install --no-cache-dir poetry && \
    poetry config virtualenvs.create false && \
    poetry install --no-dev

# Copy the current directory contents into the container at /application
COPY . /application

# Set environment variables
#COPY .env.dev .env
ENV PYTHONPATH="/application"

# Make port 7700 available to the world outside this container
EXPOSE 7700

# Run main.py when the container launches
CMD ["/bin/sh", "-c", "if [ -f /apt/.env ]; then chmod 644 /apt/.env && cp /apt/.env .env; fi && python ./infrastructure/main.py"]

